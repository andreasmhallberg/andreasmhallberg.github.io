---
layopit: post
title: Om Vim och skrivandets motoriska behag
premalink: /ompianottextivim/
tags:
- vim
---

## Klaviaturet tangentbord
För några år sedan började jag lära mig spela piano. Ganska snabbt, även när man fortfarande bara spelar barnpigor, infinner sig ibland den speciell känslan av motoriskt behag, känslan av att fingrarna och tangenterna de trycker på inte är kroppsdelar och en maskin utan en direkt förlängning av tanken. När jag blev bättre och började närma mig ett av målen jag hade satt upp, att improvisera över enkla ackordföljder, kom känslan oftare och blev intensivare, även om den varje gång tar en stund att bygga upp. Fingrarna börja vandra av sig själva efter beslut som fattas så snabbt att det aktiva medvetandet bara i efterhand kan följa med. Känslan är beroendeframkallande. Om jag inte har spelat på några dagar så börjar fingrarna länga efter att vandra över tangenterna, de börjar röra sig själva och spela i luften och så snart jag får tillfälle drar jag igenom några skalor på pianot för att lindra dem. Jag har aldrig på allvar ägnat mig åt idrott, men jag misstänker att ett av nöjena med att vara skicklig på en sport är just detta, att uppleva ett en racket eller en boll är en direkt förlängning av ens kropp och av ens tanke. Alla som spelar dator och TV-spel vet också vad detta handlar om. Tangentbordet, kontrollen eller tangentbordet slutar finnas och man styr handlingarna i spelet direkt med tanken.   

Också för några år sedan när jag började skriva på min avhandling lärde jag mig på allvar det som på engelska kallas för *toutch typing*, att skriva på ett tangentbord med korrekt fingersättning (vänstra pekfingret på~f och högra på~j) så att varje bokstav alltid har samma position i relation till handen och man kan skriva snabbt, utan att titta på tangenterna och med färre misstag. Under perioder av intensivt skrivande nådde jag samma känsla av motoriskt behag. Jag hade också samma längtan i fingrarna efter den halvmedvetna dansen om jag inte hade skrivit något den dagen. 

Men med ett stort mått av frustration: så fort man skriver fel och måste man avbryta fingrarnas rytmiska och impulsiva rörelser för att rätta det man skrivit. Detta görs på tre olika sätt. Det första är att flytta handen från sin position upp till *backspace* och hamra den flera gånger tills man har suddat ut det man skrivit. Det andra är att flytta högerhanden till piltangenten och vandra tillbaka till felet, hamra på *backspace* och fulla i med den rätta texten, och sedan vandra tillbaka till positionen där man var  och fortsätta skriva. Det tredje sättet är att flytta handen till musen och markera felet och skriva in rätt text och sedan med musen igen klicka på den ursprungliga positionen för att fortsätta skriva. Alla dessa metoder för korrigering förstör det fysiska flytet i att skriva. Mest förödande är musen, för man måste omorientera sig till en annan, tvådimensionell rumslighet på skärmen från den endimensionella rad av tecken som texten är. Dessutom måste röra musen is cirklar för att lokalisera pekaren på skärmen, vilket inte alltid går på första försöket. Allt detta avbryter konstant det fysiska behaget i att skriva på ett tangentbord. 

En delvis lösning är att inte rätta medan man skriver utan att strunta i de fel man gör när man skriver och sedan korrigera i e separat process. Detta kan fungera författande av ett första (mycket tidigt) utkast, men som alla vet som arbetar med längre texter, och speciellt med facktexter, så är skrivandet en del av tankeprocessen, och de tankar och idéer man får behöver man kunna direkt omsätta, även då detta innebära att man de måste in tidigare i den redan skrivna texten. Dessutom är gränsen mellan att skriva och att redigera flytande, i det närmaste obefintlig. Man kan tänka nya tankar, bygga om en text, göra nya övergångar som förtydligar tanke, i det att man bearbetar en text. Med andra ord förblev flytet i skrivandet, den fysiskt behagliga delen av skrivandet, alltid störd, avklippt, och frustrerad.

Lösningen var Vim, programmet som gör tangentbordet till ett piano och skrivandet till en dans. Jag upptäckte Vim för jag letade efter ett alternative till TeXShop som jag då använde. Jag ville ha ett program med stöd för syntaxfärgning av fotnoter i LaTeX. Vim är en ett redigeringsprogram utvecklat för att redigera kod, men med några enkla modifikationer är det ett utmärkt redskap för att redigera prosa. (Jag kan kan komma att skriva om hur man gör detta i ett kommande inlägg. Under tiden är [det här]() ett intressant bloginlägg för hur man kan gå till väga.) Nu har jag nästan alltid ett behagliga flöde av fingerdans när jag skriver och redigerar, även när redigeringen rör sig över flera olika filer mellan vilka delar måste kollar upp, kopieras, eller anpassas. Resten av denna text är en beskrivning av hur detta går till. 

## Vimflyt: ett exempel
Det som skiljer Vim från andra redigeringsverktyg är dess modala redigering (*modal editing*). Manipulering av text sker i en av två *modes*: *normal mode* och *insert mode*. De är egentligen fler men de här två är de viktigaste för att förstå Vims särart. Vid varje givet tillfälle när man använder Vim är man i ett av dessa modes. Den första, och den man är i när man öppnar ett dokument och som man är Vims viloläge, är *normal mode*. Hör gör alla tangenter andra saker än det man är van vid. Man kan tänka sig det som att varje tangent är ett kortkommandon för att flytta markören i texten och initiera ändringar. I *insert mode* fungerar tangentbordet "som vanligt": varje tangent lägger in ett tecken i texten. Från ett vimperspektiv är alla andra ordbehandlare alltid i *insert mode*. Jag tänkte från början rada upp och beskriva kommandon i *normal mode*, men jag tror att ett bättre sett att beskriva hur det är att skriva i Vim är att utgå från ett konkret exempel. Säg att du just har skrivit följande i din vetenskapliga artikel:

```
Detta visar att hypotesen, så som den formulerades i~1.3 ovan inte kan vederläggas med den här typen av data.
```

Säg att du efter att ha skrivet den här meningen ångrar ordvalet. Det är för starkt att säga att detta "visar". "Indikerar" hade varit bättre. Det kanske vanligaste sättet att utföra denna redigering i en traditionell ordbehandlare är att lämna tangentbordet, greppa musen, ruska på den tills man lokaliserar pekaren och högerklicka på ordet "visar" för att markera det. Sedan måste du placera handen på tangentbordet igen, med risken att handen hamnar något steg fel, och skriva "indikerar". Sedan måste du greppa musen igen, ruska på den, klicka i slutet av meningen där du var och fortsätta skriva. Alternativt kan man flytta handen till piltangenterna och hålla in vänsterpilen med markören långsamt vandrar tillbaka genom meningen, ändra ordet, och sedan vandra tillbaka till slutet av meningen. Båda dessa lösningar tvingar en att helt avbryta ens flyt.

I Vim kan du utföra ändringen på en bråkdel av tiden och utan att flytta handen från dess position med pekfingrarna på f och~j. Efter att ha skrivit färdigt meningen har man lagt sig i *normal mode*, vilket man alltid bör göra när man pausar för att tänka, vilket i regel är i lutet av meningar. Markören är då på punkten. Det finns flera sätt att flytta markören till "visar". Det kanske mest effektiva i det här fallet är att "skriva" `(w` (*öppna parentes* följt av *w*). `(`  tar en till början av meningen man befinner sig i (definierad som `.`, `!` eller~`?` följt av mellanslag eller ny rad.) och~`w` flyttar en till nästa ord. Med dessa två knapptryck har vi tagit oss till ordet vi vill byta. Väl här trycker vi `ciw` för att byta det. `c` står för `change` och måste följas av någon kommando som beskriver ett objekt som ska förändras eller av ett rörelsekommando som beskriver hur långt förändringen ska sträcka sig. (Vi har sett rörelsekommandot `(`, "till början av denna meningen". `c(` ger alltså "ändra/byt ut härifrån till början av meningen".) I det här fallet vi ändra objektet "ord". Med `iw` anger vi "inner word", dvs. ordet utan omgivande mellanrum. Med `ciw` "change inner word" raderas ordet vi är på och lägger oss i *insert mode*. Tangentbordet är nu "vanligt" och vi kan skriva in ordet "indikerar". 

När vi har skrivit ordet måste vi ta oss tillbaka till *normal mode* för att flytta tillbaka till där vi var. I ett omodifierat Vim gör man detta med ESC. ESC-tangenten ligger på en svårtillgänglig plats uppe till vänster på tangentbordet. Många, däribland jag, binder därför om CAPS LOCK till ESC. CAPS LOCK ligger lätt tillgängligt och används inte till något av seriösa människor.[^1] Jag trycker alltså med vänstra lillfingret på CAPSLOCK för att komma till *normal mode* och sedan på `)` för att komma till slutet av meningen igen. `)` är en smula svårtillgänglig så jag föredrar i regel `f.`, "gå till nästa förekomst av `.`" för samma funktion. Tycker vi på `a` (*add*) läggs vi i *insert mode* efter tecken vi ligget på och kan fortsätta skriva.

Alltså, för att genomföra den hör förändringen kan vi göra `(wciwindikerarCAPSLOCK)`. Detta kan verka esoteriskt till en början, men poängen är att med tiden övas dessa navigerings- och ändringskommandon in i muskelminnet och man börjar göra dessa redigeringar med en effektivitet och hastighet som liknar den med vilken man skriver, och utan att bryta skrivandets flyt. Om en stor del av det man sysslar med är att skriva är det värt mycket i effektivitet och välbefinnande att befinna sig i flyt och motoriskt behag.

Detta är givetvis bara ett kort exempel på hur textredigering går till i Vim. Funktionalitet i Vim är enorm och alla kommandon är mycket enkla att modifiera efter behag. Eftersom Vim inte bara är gratis utan också öppen programvara, konstruerad för att vara påbyggnadsbar, tillkommer nu funktionalitet hela tiden. Har du något du vill göra i Vim som grundprogrammet inte stöder har antagligen någon skrivet en plugin för just det. (Det enda som krävs för att installera en ny plugin är att ladda ner en fil och lägga den i en mapp. Inget annat.) 

## Några förbehåll
### Ren text
Som en traditionell editor kan Vim bara hantera ren text. Den kan inte visa formateringen t.ex. .doc (Word-filer), .rtf., eller liknande. Det vill säga Vim kan bara liknande den underliggande koden som specificerar inbäddad data om typsnitt, formatering, och annat, men inte hur detta ser ut när det renderas, så som det gör i till exempel Word eller Open Office. Detta är inget problem om man författar i format som bygger på ren text, såsom .txt, .markdown, eller LaTeX (och detta har många fördelar jämfört med arabersflöden i traditionella ordbehandlare, men det är ämnet för framtida bloginlägg).

### Fast teckenbredd
Vims naturliga hem är terminalen och den kan därför bara visa text med fast teckenbredd. I~tar lika mycket plats som~M. Om man likt mig inte har en bakgrund inom programmering tar detta ett tag att vänja sig vid. 


[^1]: När Vi, föregångaren till Vim skapades XXXX låg ESC där CAPS LOCK ligger på tangentbord idag.
